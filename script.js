// üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ (–ª–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏ –∞–≤—Ç–æ–ø–∞—Ä–∫–æ–≤)
const users = {
    "park1": { username: "user1", password: "pass1" },
    "park2": { username: "user2", password: "pass2" },
    "park3": { username: "user3", password: "pass3" },
    "park4": { username: "user4", password: "pass4" },
    "park5": { username: "user5", password: "pass5" },
    "park6": { username: "user6", password: "pass6" }
};

let currentPark = null;

// –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const loginSection = document.getElementById("login-section");
const appSection = document.getElementById("app-section");
const loginButton = document.getElementById("login-button");
const logoutButton = document.getElementById("logout-button");
const loginUsername = document.getElementById("login-username");
const loginPassword = document.getElementById("login-password");

// üîê –§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞
loginButton.addEventListener("click", function () {
    const username = loginUsername.value.trim();
    const password = loginPassword.value.trim();

    for (let park in users) {
        if (users[park].username === username && users[park].password === password) {
            currentPark = park;
            localStorage.setItem("currentPark", park); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            loginSection.style.display = "none";
            appSection.style.display = "block";
            renderCouriers(); // –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—å–µ—Ä–æ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–≥–æ –∞–≤—Ç–æ–ø–∞—Ä–∫–∞
            return;
        }
    }
    alert("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!");
});

// üö™ –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞
logoutButton.addEventListener("click", function () {
    localStorage.removeItem("currentPark");
    currentPark = null;
    loginSection.style.display = "block";
    appSection.style.display = "none";
});

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ localStorage
window.onload = function () {
    const savedPark = localStorage.getItem("currentPark");
    if (savedPark && users[savedPark]) {
        currentPark = savedPark;
        loginSection.style.display = "none";
        appSection.style.display = "block";
        renderCouriers();
    }
};

// üè¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫—É—Ä—å–µ—Ä–æ–≤ –ø–æ –∞–≤—Ç–æ–ø–∞—Ä–∫—É
async function renderCouriers() {
    if (!currentPark) return;

    const querySnapshot = await getDocs(collection(db, "couriers"));
    const couriers = [];

    querySnapshot.forEach(doc => {
        const data = doc.data();
        if (data.park === currentPark) {
            couriers.push({ id: doc.id, ...data });
        }
    });

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫—É—Ä—å–µ—Ä–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –∞–≤—Ç–æ–ø–∞—Ä–∫–∞
    const courierList = document.getElementById("courier-list");
    courierList.innerHTML = "";
    couriers.forEach(c => {
        const row = document.createElement("tr");
        row.innerHTML = `
            <td>${c.name}</td>
            <td>${c.returned ? "–í–æ–∑–≤—Ä–∞—â—ë–Ω" : "–ù–µ –≤–æ–∑–≤—Ä–∞—â—ë–Ω"}</td>
            <td>
                <button onclick="toggleReturned('${c.id}', ${!c.returned})">
                    ${c.returned ? "–û—Ç–º–µ–Ω–∏—Ç—å" : "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"}
                </button>
                <button onclick="deleteCourier('${c.id}')">–£–¥–∞–ª–∏—Ç—å</button>
            </td>
        `;
        courierList.appendChild(row);
    });
}
